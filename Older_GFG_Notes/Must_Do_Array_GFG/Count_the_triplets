/* Problem Statement
Given an array of distinct integers. The task is to count all the triplets such that sum of two elements equals the third element.
 
Example 1:

Input:
N = 4
arr[] = {1, 5, 3, 2}
Output: 2
Explanation: There are 2 triplets: 
1 + 2 = 3 and 3 +2 = 5 
​Example 2:

Input: 
N = 3
arr[] = {2, 3, 4}
Output: 0
Explanation: No such triplet exits
Your Task:  
You don't need to read input or print anything. Your task is to complete the function countTriplet() which takes the array arr[] and N as inputs and returns the triplet count

Expected Time Complexity: O(N2)
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ N ≤ 103
1 ≤ arr[i] ≤ 105

Link for Editorial - https://www.geeksforgeeks.org/find-triplet-sum-two-equals-third-element/

*/

// Code for above problem

	int countTriplet(int arr[], int n)
	{
	    // Your code goes here
	    vector<int> a;
	    for(int i=0;i<n;i++)
	    {
	        a.push_back(arr[i]);
	    }
	    int count=0;
	    sort(a.begin(),a.end());
	 
	    for(int i=1;i<n;i++)
	    {
	        int sum=a[i];
	        for(int j=0,k=n-2;(j<n-1 && j<k && k>0);)
	        {
	            if(a[j]+a[k]==sum)
	            {
	                count++;
	                j++;
	                k--;
	            }
	            
	            else if(a[j]+a[k]<sum)
	            {
	                j++;
	            }
	            else if(a[j]+a[k]>sum)
	            {
	                k--;
	            }
	        }
	    }
	    return count;
	}
